---
title: "Final project Data Science"
author: "Steffi Mangelsdorf"
date: "4/13/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
require(reshape2)
require(ggplot2)
require(haven)
require(tidyr)
```


```{r}
ASR <- read_dta("2016-ASR_Public_Use_File.dta")
```

```{r}
b1 <- ggplot(ASR1, aes(x = as.factor(qn30a))) +
  labs(title = "food stamps") +
  geom_bar(position='dodge', width=.5, fill = "steelblue") +
  coord_flip() +
  scale_x_discrete(labels=c("1" = "No", "2" = "Yes",
                              "8" = "Don't know", "9" = "Refused")) +
  xlab("") +
  ylab("")

b2 <- ggplot(ASR, aes(x = as.factor(qn31a))) +
  labs(title = "TANF") +
  geom_bar(width=.5, fill = "steelblue") +
  coord_flip() +
  scale_x_discrete(labels=c("1" = "No", "2" = "Yes",
                              "8" = "Don't know", "9" = "Refused")) +
  xlab("") +
  ylab("")

b3 <- ggplot(ASR, aes(x = as.factor(qn32a))) +
  labs(title = "RCA") +
  geom_bar(width=.5, fill = "steelblue") +
  coord_flip() +
    scale_x_discrete(labels=c("1" = "No", "2" = "Yes",
                              "8" = "Don't know", "9" = "Refused")) +
  xlab("") +
  ylab("")

b4 <- ggplot(ASR, aes(x = as.factor(qn33a))) +
  labs(title = "SSI") +
  geom_bar(width=.5, fill = "steelblue") +
  coord_flip() +
  scale_x_discrete(labels=c("1" = "No", "2" = "Yes",
                              "8" = "Don't know", "9" = "Refused")) + 
  xlab("") +
  ylab("")

b5 <- ggplot(ASR, aes(x = as.factor(qn34a))) +
  xlim("No", "Yes") +
  labs(title = "GA") +
  geom_bar(width=.5, fill = "steelblue") +
  coord_flip() +
  scale_x_discrete(labels=c("1" = "No", "2" = "Yes",
                              "8" = "Don't know", "9" = "Refused")) +
  xlab("") +
  ylab("")
```

```{r}
multiplot <- function(..., plotlist=NULL, file, cols=3, layout=NULL) {
  library(grid)

  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

 if (numPlots==1) {
    print(plots[[1]])

  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
```

```{r}
multiplot(b1, b2, b3, b4, b5, cols=2)
```
